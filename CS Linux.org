#+TITLE: CS Linux
#+DESCRIPTION:
#+KEYWORDS:
#+STARTUP:  content


- [[wiki:index][Index]]

- Parent: [[wiki:CS Technical][CS Technical]]

- Related: 

* CS Linux

** Get information on mounted device
#+BEGIN_SRC sh
sudo udevadm info -a -n /dev/sda1
#+END_SRC

** Write ISO image to USB

1. Convert iso to dmg
#+BEGIN_SRC sh
hdiutil convert -format UDRW -o nameYourOutputFile nameOfYourInputFileISO
#+END_SRC

2. Check disk
#+BEGIN_SRC sh
diskutil list
#+END_SRC

3. Partition disk
#+BEGIN_SRC sh
diskutil partitionDisk /dev/disk2 1 "Free Space" "unused" "100%"
#+END_SRC

4. Write image
#+BEGIN_SRC sh
dd if=pathToYourOutputFile.dmg of=/dev/disk2 bs=1m
#+END_SRC

** What processes holds file(FD)
#+BEGIN_SRC sh
lsof /path/to/file
#+END_SRC
** Resize partition on LVM
1. Unmount partition
#+BEGIN_SRC sh
umount /home
#+END_SRC
2. Shrink choosen partition
#+BEGIN_SRC sh
# Run fs check beforehand
e2fsck -f /dev/mapper/vg_test-lv_home
# actual resize
resize2fs /dev/mapper/vg_test-lv_home 20G
# Reduce LVM to 20G
lvreduce -L 20G /dev/mapper/vg_test-lv_home
#+END_SRC
3. Extend choosen partition with space freed
#+BEGIN_SRC sh
lvextend -l +100%FREE /dev/mapper/vg_test-lv_root
resize2fs /dev/mapper/vg_test-lv_root
#+END_SRC
4. Mount partition back
#+BEGIN_SRC sh
mount /home
#+END_SRC

** Get CPU usage
** Get info on available hash storage format and crypto
#+BEGIN_SRC sh
man 5 crypt
#+END_SRC
*** Get CPU usage for two cores for comparison
#+BEGIN_SRC sh
dstat -C 0,13
You did not select any stats, using -cdngy by default.
-------cpu0-usage-------------cpu13-usage------ -dsk/total- -net/total- ---paging-- ---system--
usr sys idl wai hiq siq:usr sys idl wai hiq siq| read  writ| recv  send|  in   out | int   csw 
  2   1  97   0   0   0:  2   1  97   0   0   0|1632B   32k|   0     0 |   0     0 | 808  2817 
 49  16  34   0   0   0: 64  21   8   0   0   7|   0     0 |4365k 4754k|   0     0 |  52k  650k
 30  14  56   0   0   0: 65  24   4   0   0   6|4096B 9740k|4170k 4509k|   0     0 |  52k  467k
 25  18  56   0   0   1: 69  20   6   0   0   5|   0  4096B|4170k 4589k|   0     0 |  50k  298k
 34  13  53   0   0   0: 65  20   8   0   0   7|   0     0 |4322k 4681k|   0     0 |  49k  223k
 37  13  49   0   0   0: 66  22   6   0   0   6|   0   124k|4297k 4626k|   0     0 |  47k  198k
 15   5  80   0   0   0: 69  18   6   0   0   6|   0     0 |4318k 4685k|   0     0 |  45k  141k
 30  12  58   0   0   0: 65  20   8   0   0   7|   0   180k|4205k 4472k|   0     0 |  50k  177k
 11   7  81   0   0   1: 68  20   7   0   0   5|   0   172k|4320k 4669k|   0     0 |  51k  161k
 31  11  58   0   0   0: 68  19   7   0   0   6|   0     0 |4206k 4552k|   0     0 |  48k  185k
 18   7  75   0   0   0: 66  22   6   0   0   6|   0     0 |4221k 4569k|   0     0 |  47k  238k
 27   9  64   0   0   0: 63  23   7   0   0   7|   0    96k|6484k 4539k|   0     0 |  47k  228k
 21   9  70   0   0   0: 67  20   6   0   0   6|   0     0 |8714k 4578k|   0     0 |  48k  169k
 24  11  65   0   0   0: 65  20   5   0   0   9|   0  4096B|8846k 4672k|   0     0 |  48k  160k
 26  14  60   0   0   0: 67  21   6   0   0   6|   0   120k|  10M 4564k|   0     0 |  47k  194k
 23   9  67   0   0   1: 68  19   7   0   0   6|   0     0 |9223k 4487k|   0     0 |  47k  197k
#+END_SRC
*** Get info on cores, every second, 10 times
sar is part of systat package
#+BEGIN_SRC sh
 sar -P ALL 1 10
Linux 3.10.0-1127.8.2.el7.x86_64 (ed-v-perfplatform-129.be.core.pw) 	18.01.2023 	_x86_64_	(16 CPU)

19:08:49        CPU     %user     %nice   %system   %iowait    %steal     %idle
19:08:50        all     43,17      0,00     18,26      0,00      0,00     38,57
19:08:50          0     38,61      0,00     14,85      0,00      0,00     46,53
19:08:50          1     37,62      0,00     13,86      0,00      0,00     48,51
19:08:50          2     30,00      0,00     18,00      0,00      0,00     52,00
19:08:50          3     45,00      0,00     17,00      0,00      0,00     38,00
19:08:50          4     34,34      0,00     14,14      0,00      0,00     51,52
19:08:50          5     38,00      0,00     16,00      0,00      0,00     46,00
19:08:50          6     36,63      0,00     12,87      0,00      0,00     50,50
19:08:50          7     45,45      0,00     16,16      0,00      0,00     38,38
19:08:50          8     34,65      0,00      9,90      0,00      0,00     55,45
19:08:50          9     33,66      0,00     12,87      0,00      0,00     53,47
19:08:50         10     62,38      0,00     29,70      0,00      0,00      7,92
19:08:50         11     59,60      0,00     27,27      0,00      0,00     13,13
19:08:50         12     60,78      0,00     32,35      0,00      0,00      6,86
19:08:50         13     61,00      0,00     28,00      0,00      0,00     11,00
19:08:50         14     31,00      0,00     14,00      0,00      0,00     55,00
19:08:50         15     42,16      0,00     14,71      0,00      0,00     43,14
#+END_SRC
** Get system information
#+BEGIN_SRC sh
inxi -F
#+END_SRC
** Read process stdout
- General approach:
#+BEGIN_SRC sh
  strace -e write -p <pid>
#+END_SRC
- When process stdout is not connected to tty or redirected to /dev/null
#+BEGIN_SRC sh
  tail -f /proc/<pid>/fd/1
#+END_SRC
